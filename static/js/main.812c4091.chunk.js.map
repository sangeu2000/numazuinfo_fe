{"version":3,"sources":["Login.js","ServiceAndPrivacyPolicy.js","NewUser.js","GetToken.js","Session.js","Navigation.js","Footer.js","MyPage.js","ACLRoute.js","Logout.js","GeneralError.js","Editor.js","App.js","serviceWorker.js","index.js"],"names":["Login","location","previous_page","useLastLocation","query","queryString","parse","search","alert_msg","Alert","variant","window","sessionStorage","setItem","pathname","id","className","href","process","style","padding","src","height","alt","ServiceAndPrivacyPolicyBody","NewUser","props","handleClose","setState","modal_show","handleShow","handleNameChange","e","target","value","length","maxLength","slice","name","handleSubmit","preventDefault","console","log","googleReCaptchaProps","executeRecaptcha","then","captcha_token","data","state","token","recaptcha","axios","post","withCredentials","resp","redirect","catch","render","hasError","to","marginTop","Form","onSubmit","Group","controlId","Label","Control","type","readOnly","disabled","defaultValue","onChange","onClick","Button","Modal","show","onHide","size","Header","closeButton","Title","Body","ServiceAndPrivacyPolicy","React","Component","NewUserCaptcha","withGoogleReCaptcha","GetToken","useGoogleReCaptcha","recaptcha_token","key","localStorage","expiration","JSON","stringify","permissions","username","getItem","removeItem","err","response","error","isLoggedIn","getToken","clearSession","getUsername","Navigation","loggedIn","Nav","Link","role","NavDropdown","title","Item","Navbar","collapseOnSelect","bg","expand","sticky","fixed","Brand","Toggle","aria-controls","Collapse","Footer","MyPage","undefined","nickname","email","user_level","reputation","setAccountInfo","user_data","error_msg","this","Card","Text","ACLRoute","acl_item","component","GeneralError","EditPage","editorRef","createRef","handleClick","current","getInstance","exec","placeholder","previewStyle","initialEditType","initialValue","language","hideModeSwitch","ref","toolbarItems","App","exact","path","Logout","Boolean","hostname","match","ReactDOM","StrictMode","reCaptchaKey","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.812c4091.chunk.js","sourcesContent":["import React from 'react';\r\nimport queryString from'query-string';\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport { useLastLocation } from 'react-router-last-location';\r\n\r\nfunction Login({ location }) {\r\n    const previous_page = useLastLocation();\r\n    const query = queryString.parse(location.search);\r\n    const hasError = 'error' in query && 'success';\r\n    let alert_msg = null;\r\n    if (hasError) {\r\n        if (query['error'] === 'user_cancelled_grant') {\r\n            alert_msg = <Alert variant=\"danger\">사용자가 로그인 작업을 취소했습니다</Alert>;\r\n        }\r\n        else if (query['error'] === 'claiming_token_failed') {\r\n            alert_msg = <Alert variant=\"danger\">로그인 과정 중 문제가 발생했습니다</Alert>;\r\n        }\r\n        else if (query['error'] === 'wrong_attempt') {\r\n            alert_msg = <Alert variant=\"danger\">잘못된 요청입니다</Alert>\r\n        }\r\n        else if (query['error'] === 'new_user_fetching_profile_failed') {\r\n            alert_msg = <Alert variant=\"danger\">신규 유저 등록을 위한 추가 정보 요청에 실패했습니다</Alert>\r\n        }\r\n        else if (query['error'] === 'new_user_fetching_profile_failed') {\r\n            alert_msg = <Alert variant=\"danger\">요청 시간이 초과되었습니다.</Alert>\r\n        }else if (query['error'] === 'captcha_verification_failed') {\r\n            alert_msg = <Alert variant=\"danger\">reCAPTCHA 인증에 실패했습니다</Alert>\r\n        }\r\n        else {\r\n            alert_msg = <Alert variant=\"danger\">로그인 과정 중 예상치 못한 문제가 발생했습니다</Alert>\r\n        }\r\n    }\r\n    else {\r\n        if (previous_page === null)\r\n            window.sessionStorage.setItem('previous_page', '/')\r\n        else if (previous_page.pathname !== '/login')\r\n            window.sessionStorage.setItem('previous_page', previous_page.pathname);\r\n        alert_msg = \"\";\r\n    }\r\n    return (\r\n        <div id=\"container\" className=\"bg-light container-fluid text-center\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"bg-white rounded shadow\">\r\n                        {alert_msg}\r\n                        <h4 id=\"sign_in_title\">로그인</h4>\r\n                        <p>아래 외부 서비스를 통해 로그인할 수 있습니다.</p>\r\n                        <a href={process.env.REACT_APP_API_ENDPOINT + \"oauth/request/google\"} className=\"btn\" style={{padding: \"0 0 0 0\"}}><img src={process.env.PUBLIC_URL + '/sign_in_with_google.png'} height=\"48px\" alt=\"Sign in with Google\"/></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nfunction ServiceAndPrivacyPolicyBody() {\r\n    return (\r\n        <div>\r\n            뭐써야하지\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ServiceAndPrivacyPolicyBody;","import React from 'react';\r\nimport Redirect from 'react-router-dom/Redirect';\r\nimport queryString from'query-string';\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button'\r\nimport ServiceAndPrivacyPolicyBody from './ServiceAndPrivacyPolicy'\r\nimport axios from 'axios';\r\nimport { withGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\n\r\nclass NewUser extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.query = queryString.parse(this.props.location.search);\r\n        this.hasError = !('name' in this.query) || !('email' in this.query) || !('token' in this.query) || false;\r\n        let name = '';\r\n        if ('name' in this.query) {\r\n            name = this.query['name'];\r\n        }\r\n        this.state = {\r\n            modal_show: false,\r\n            name: name\r\n        };\r\n    }\r\n    handleClose = () => {\r\n        this.setState({modal_show: false});\r\n    }\r\n    handleShow = () => {\r\n        this.setState({modal_show: true});\r\n    }\r\n\r\n    handleNameChange = (e) => {\r\n        if (e.target.value.length > e.target.maxLength) {\r\n            e.target.value = e.target.value.slice(0, e.target.maxLength)\r\n        }\r\n        this.setState({name: e.target.value});\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(this.props.googleReCaptchaProps.executeRecaptcha('register'));\r\n        this.props.googleReCaptchaProps.executeRecaptcha('register').then((captcha_token) => {\r\n            let data = {\r\n                name: this.state.name,\r\n                token: this.query.token,\r\n                recaptcha: captcha_token\r\n            }\r\n            axios.post(process.env.REACT_APP_API_ENDPOINT + \"account/register\", data, {withCredentials: true})\r\n                .then( (resp) => {\r\n                    window.location = resp.data.redirect;\r\n                }).catch(() => {\r\n                    window.location = '/login?error=wrong_attempt'\r\n            })\r\n        }).catch(() => {\r\n            window.location = '/login?error=captcha_verification_failed'\r\n        })\r\n\r\n    }\r\n\r\n    render = () => {\r\n        if (this.hasError) {\r\n            return (\r\n                <Redirect to='/login?error=wrong_attempt'/>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div id=\"login-new-user\" className=\"bg-light container-fluid text-center\">\r\n                <div className=\"col-12 bg-white rounded shadow\" style={{marginTop: '1em'}}>\r\n                    <h4 id=\"sign_in_title\">신규 유저 등록</h4>\r\n                    <p>&nbsp;</p>\r\n                    <p>아래 자동으로 가져와진 정보가 올바른지 확인해주세요.</p>\r\n                    <p>이름은 실명이 아니어도 무방하나, 모든 사람에게 공개되며 추후 변경이 불가능합니다.</p>\r\n                    <p>이메일은 인증된 구글 계정의 이메일을 사용하며, 변경할 수 없습니다.</p>\r\n                    <p>&nbsp;</p>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                        <Form.Group controlId=\"joinForm.Google.Email\">\r\n                            <Form.Label>이메일</Form.Label>\r\n                            <Form.Control type=\"email\" value={this.query['email']} readOnly=\"\" disabled/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"joinForm.Google.Name\">\r\n                            <Form.Label>이름</Form.Label>\r\n                            <Form.Control type=\"text\" defaultValue={this.query['name']} maxLength=\"30\" onChange={this.handleNameChange}/>\r\n                        </Form.Group>\r\n                        <p>아래 등록 버튼을 눌러 진행함으로서 <a href=\"#\" onClick={this.handleShow}>이용약관 및 개인정보 처리 방침</a>에 동의한 것으로 간주합니다.</p>\r\n                        <Button variant=\"primary\" type=\"submit\">등록</Button>\r\n                    </Form>\r\n                </div>\r\n                <Modal show={this.state.modal_show} onHide={this.handleClose} size=\"xl\">\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>이용약관 및 개인정보 처리 방침</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <ServiceAndPrivacyPolicyBody/>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst NewUserCaptcha = withGoogleReCaptcha(NewUser);\r\n\r\nexport default NewUserCaptcha;","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport queryString from'query-string';\r\nimport './Navigation.scss'\r\nimport {useGoogleReCaptcha} from \"react-google-recaptcha-v3\";\r\nimport axios from 'axios';\r\n\r\n\r\nfunction GetToken({ location }) {\r\n    const { executeRecaptcha } = useGoogleReCaptcha();\r\n    const query = queryString.parse(location.search);\r\n    if (!('key' in query)) {\r\n        return (\r\n            <Redirect to='/login?error=wrong_attempt'/>\r\n        )\r\n    }\r\n    executeRecaptcha('issue_token').then((recaptcha_token) => {\r\n        let data = {\r\n            key: query.key,\r\n            recaptcha: recaptcha_token\r\n        }\r\n        axios.post(process.env.REACT_APP_API_ENDPOINT + \"token/issue\", data, {withCredentials: true})\r\n            .then( (resp) => {\r\n                window.localStorage.setItem('token', resp.data.token);\r\n                window.localStorage.setItem('expiration', resp.data.expiration);\r\n                window.localStorage.setItem('permissions', JSON.stringify(resp.data.permissions));\r\n                window.localStorage.setItem('username', resp.data.username);\r\n\r\n                let previous_page = window.sessionStorage.getItem('previous_page');\r\n\r\n                if (!previous_page)\r\n                    previous_page = '/';\r\n                else\r\n                    window.sessionStorage.removeItem('previous_page');\r\n\r\n                window.location = previous_page;\r\n            }).catch((err) => {\r\n            if (err.response)\r\n                window.location = '/login?error=' + err.response.data.error;\r\n            else\r\n                window.location = '/login?error=claiming_token_failed';\r\n        })\r\n    }).catch(() => {\r\n        window.location = '/login?error=captcha_verification_failed';\r\n    })\r\n\r\n    return (\r\n        <div id=\"container\" className=\"bg-light container-fluid text-center\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"bg-white rounded shadow\">\r\n                        <p>로그인 중입니다...</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GetToken;","import axios from 'axios';\r\n\r\nexport function isLoggedIn() {\r\n    let token = getToken()\r\n    return token !== null;\r\n}\r\n\r\nexport function validateToken() {\r\n    let token = getToken()\r\n    return axios.post(process.env.REACT_APP_API_ENDPOINT + \"token/validate\", {token: token}).catch(() => {\r\n        clearSession();\r\n    })\r\n}\r\n\r\nexport function clearSession() {\r\n    window.localStorage.removeItem('token');\r\n    window.localStorage.removeItem('expiration');\r\n    window.localStorage.removeItem('permissions');\r\n    window.localStorage.removeItem('username');\r\n}\r\n\r\nexport function getToken() {\r\n    return window.localStorage.getItem('token');\r\n}\r\n\r\nexport function getUsername() {\r\n    return window.localStorage.getItem('username');\r\n}\r\n\r\nexport function hasPermission(perm_item) {\r\n    let items = JSON.parse(window.localStorage.getItem('permissions'));\r\n    return perm_item in items;\r\n}\r\n","import Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport React from \"react\";\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport './Navigation.scss'\r\nimport { isLoggedIn, getUsername } from \"./Session\";\r\nimport {NavDropdown} from \"react-bootstrap\";\r\n\r\nfunction Navigation() {\r\n    let loggedIn = <LinkContainer to=\"/login\"><Nav.Link role=\"button\">로그인</Nav.Link></LinkContainer>;\r\n\r\n    if (isLoggedIn())\r\n        loggedIn =\r\n            <NavDropdown title={\"Logged in as \" + getUsername()} id=\"navbar-account-dropdown\">\r\n                <NavDropdown.Item><LinkContainer to=\"/mypage\"><Nav.Link role=\"button\">Mypage</Nav.Link></LinkContainer></NavDropdown.Item>\r\n                <NavDropdown.Item><LinkContainer to=\"/logout\"><Nav.Link role=\"button\">Logout</Nav.Link></LinkContainer></NavDropdown.Item>\r\n            </NavDropdown>;\r\n    return (\r\n        <Navbar collapseOnSelect={true} bg=\"dark\" expand=\"lg\" variant=\"dark\" sticky=\"top\" fixed=\"top\">\r\n            <Navbar.Brand>NUMAZU.info</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"navbar-menus\" />\r\n            <Navbar.Collapse id=\"navbar-menus\">\r\n                <Nav className=\"mr-auto\" id='navbar-menu-left'>\r\n                    <LinkContainer to=\"/\"><Nav.Link role=\"button\">검색</Nav.Link></LinkContainer>\r\n                    <LinkContainer to=\"/category\"><Nav.Link role=\"button\">카테고리</Nav.Link></LinkContainer>\r\n                </Nav>\r\n                <Nav className=\"mr-auto justify-content-end\" id='navbar-menu-right'>\r\n                    {loggedIn}\r\n                </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            7th Center Maki Nishikino, 5th Center You Watanabe, 4th Center Rina Tennoji\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport {getUsername, getToken, hasPermission} from \"./Session\";\r\nimport axios from 'axios';\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nclass MyPage extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        if (props.location.state !== undefined)\r\n            this.state = props.location.state;\r\n        else\r\n            this.state = {};\r\n        if (!('error' in this.state))\r\n            this.state.error = '';\r\n        this.state.nickname = getUsername();\r\n        this.state.email = ' ';\r\n        this.state.user_level = 0;\r\n        this.state.reputation = 0;\r\n    }\r\n\r\n    componentDidMount() {\r\n        const setAccountInfo = (data) => {\r\n            this.setState(data)\r\n        }\r\n\r\n        axios.post(process.env.REACT_APP_API_ENDPOINT + \"account/get_user_data\", {token: getToken()})\r\n            .then((resp) => {\r\n                setAccountInfo(resp.data.user_data);\r\n            }).catch((e) => {\r\n            if (e.response)\r\n                setAccountInfo({'error': e.response.data.error});\r\n            else\r\n                setAccountInfo({'error': 'error_requesting_server'});\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let error_msg = '';\r\n        if (this.state.error !== '') {\r\n            if (this.state.error === 'token_verification_failed')\r\n                error_msg = <div className=\"col-12\"><Alert variant=\"danger\">로그인 토큰 검증에 실패했습니다.</Alert></div>\r\n            else if (this.state.error === 'failed_to_find_user')\r\n                error_msg = <div className=\"col-12\"><Alert variant=\"danger\">사용자를 찾지 못했습니다.</Alert></div>\r\n            else if (this.state.error === 'no_permission')\r\n                error_msg = <div className=\"col-12\"><Alert variant=\"danger\">해당 동작에 대한 권한이 없습니다. 아래에서 권한을 확인해주세요.</Alert></div>\r\n            else if (this.state.error === 'revoking_token_failed')\r\n                error_msg = <div className=\"col-12\"><Alert variant=\"danger\">토큰 폐기에 실패해 로그아웃되지 않았습니다.</Alert></div>\r\n            else\r\n                error_msg = <div className=\"col-12\"><Alert variant=\"danger\">에러가 발생했습니다.</Alert></div>\r\n        }\r\n        return (\r\n            <div id=\"container\" className=\"container-fluid text-center bg-light\">\r\n                <div className=\"row\">\r\n                    {error_msg}\r\n                    <div className=\"col-12\">\r\n                        <Card className=\"rounded shadow\">\r\n                            <Card.Title>\r\n                                사용자 정보\r\n                            </Card.Title>\r\n                            <Card.Text>\r\n                                현재 계정 정보는 다음과 같습니다.\r\n                            </Card.Text>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                        <Card className=\"rounded shadow text-left\" style={{padding: 0}}>\r\n                            <Card.Header>Nickname</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text id='nickname'>\r\n                                    {this.state.nickname}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                        <Card className=\"rounded shadow text-left\" style={{padding: 0}}>\r\n                            <Card.Header>E-mail</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text id='email'>\r\n                                    {this.state.email}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                        <Card className=\"rounded shadow text-left\" style={{padding: 0}}>\r\n                            <Card.Header>User permission level</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text id='user_level'>\r\n                                    {this.state.user_level}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    <div className=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12\">\r\n                        <Card className=\"rounded shadow text-left\" style={{padding: 0}}>\r\n                            <Card.Header>User reputation</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Text id='reputation'>\r\n                                    {this.state.reputation}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default MyPage;","import React from \"react\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport {hasPermission, isLoggedIn} from './Session'\r\n\r\nfunction ACLRoute({ acl_item, component: Component, render, ...rest }) {\r\n    if (!isLoggedIn())\r\n        return <Redirect to='/login' />\r\n    else if (acl_item !== undefined && !hasPermission(acl_item))\r\n        return <Redirect to={{pathname: '/mypage', state:{error: 'no_permission'}}} />\r\n    else\r\n        return <Route render={(props) => <Component {...props} /> } />\r\n}\r\n\r\n\r\nexport default ACLRoute;","import React from \"react\";\r\nimport './Navigation.scss'\r\nimport {useGoogleReCaptcha} from \"react-google-recaptcha-v3\";\r\nimport axios from 'axios';\r\nimport {clearSession, getToken} from \"./Session\";\r\n\r\n\r\nfunction GetToken({ location }) {\r\n    const { executeRecaptcha } = useGoogleReCaptcha();\r\n    executeRecaptcha('logout').then((recaptcha_token) => {\r\n        let data = {\r\n            token: getToken(),\r\n            recaptcha: recaptcha_token\r\n        }\r\n        axios.post(process.env.REACT_APP_API_ENDPOINT + \"token/revoke\", data, )\r\n            .then( (resp) => {\r\n                clearSession();\r\n\r\n                window.location = '/';\r\n            }).catch((err) => {\r\n            if (err.response) {\r\n                if (err.response.data.error === 'token_verification_failed' ) {\r\n                    clearSession();\r\n                    window.location = '/';\r\n                }\r\n                else\r\n                    window.location = '/error?error=' + err.response.data.error;\r\n            }\r\n            else\r\n                window.location = '/error?error=revoking_token_failed';\r\n        })\r\n    }).catch(() => {\r\n        window.location = '/error?error=captcha_verification_failed';\r\n    })\r\n\r\n    return (\r\n        <div id=\"container\" className=\"bg-light container-fluid text-center\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"bg-white rounded shadow\">\r\n                        <p>로그아웃 중입니다...</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GetToken;","import React from 'react';\r\nimport queryString from'query-string';\r\nimport Alert from \"react-bootstrap/Alert\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction GeneralError({ location }) {\r\n    const query = queryString.parse(location.search);\r\n    const hasError = 'error' in query && 'success';\r\n    let alert_msg = null;\r\n    if (!hasError)\r\n        query['error'] = 'wrong_attempt';\r\n\r\n    if (query['error'] === 'no_permission') {\r\n        alert_msg = <Alert variant=\"danger\">권한이 없습니다</Alert>;\r\n    }\r\n    else if (query['error'] === 'token_verification_failed') {\r\n        alert_msg = <Alert variant=\"danger\">로그인 토큰 검증에 실패했습니다</Alert>;\r\n    }\r\n    else if (query['error'] in ['wrong_attempt', 'no_required_args', 'dictionary_required']) {\r\n        alert_msg = <Alert variant=\"danger\">잘못된 요청입니다</Alert>\r\n    }\r\n    else if (query['error'] === 'revoking_token_failed') {\r\n        alert_msg = <Alert variant=\"danger\">로그아웃에 실패했습니다</Alert>\r\n    }\r\n    else if (query['error'] === 'new_user_fetching_profile_failed') {\r\n        alert_msg = <Alert variant=\"danger\">요청 시간이 초과되었습니다.</Alert>\r\n    }else if (query['error'] === 'captcha_verification_failed') {\r\n        alert_msg = <Alert variant=\"danger\">reCAPTCHA 인증에 실패했습니다</Alert>\r\n    }\r\n    else {\r\n        alert_msg = <Alert variant=\"danger\">예상치 못한 문제가 발생했습니다</Alert>\r\n    }\r\n    return (\r\n        <div id=\"container\" className=\"bg-light container-fluid text-center\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"bg-white rounded shadow\">\r\n                        {alert_msg}\r\n                        <Link to=\"/\" role=\"button\" className=\"btn btn-outline-dark\">홈 화면으로 돌아가기</Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default GeneralError;","import 'codemirror/lib/codemirror.css';\r\nimport React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nimport { Editor } from '@toast-ui/react-editor'\r\nimport '@toast-ui/editor/dist/i18n/ko-kr'\r\nimport '@toast-ui/editor/dist/toastui-editor.css'\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass EditPage extends React.Component {\r\n    editorRef = React.createRef();\r\n\r\n    handleClick = () => {\r\n        this.editorRef.current.getInstance().exec('Bold');\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"container\" className=\"container-fluid text-center bg-light\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <Card className=\"rounded shadow\">\r\n                            <Card.Title>\r\n                                <Form.Control type=\"text\" placeholder=\"장소명/상호 입력\" name=\"\"/>\r\n                            </Card.Title>\r\n                            <Card.Body style={{padding: 0}}>\r\n                                <Editor\r\n                                    previewStyle=\"tab\"\r\n                                    height=\"400px\"\r\n                                    initialEditType=\"wysiwyg\"\r\n                                    initialValue=\"todokete setsunasaniwa\"\r\n                                    language=\"ko-KR\"\r\n                                    hideModeSwitch={true}\r\n                                    ref={this.editorRef}\r\n                                    toolbarItems={[\r\n                                        'heading',\r\n                                        'bold',\r\n                                        'italic',\r\n                                        'strike',\r\n                                        'divider',\r\n                                        'hr',\r\n                                        'quote',\r\n                                        'divider',\r\n                                        'ul',\r\n                                        'ol',\r\n                                        'task',\r\n                                        'indent',\r\n                                        'outdent',\r\n                                        'divider',\r\n                                        'table',\r\n                                        'image',\r\n                                        'link',\r\n                                        'divider'\r\n                                    ]}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditPage;","import React from 'react';\nimport Login from \"./Login\";\nimport NewUserCaptcha from \"./NewUser\";\nimport GetToken from \"./GetToken\";\nimport './App.css';\nimport Navigation from \"./Navigation\";\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { LastLocationProvider } from 'react-router-last-location';\nimport Footer from \"./Footer\";\nimport MyPage from \"./MyPage\";\nimport ACLRoute from './ACLRoute'\nimport Search from \"./Search\";\nimport Logout from \"./Logout\"\nimport GeneralError from \"./GeneralError\";\nimport EditPage from \"./Editor\";\n\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <LastLocationProvider>\n                    <Navigation/>\n                    <div id='content'>\n                        <Switch>\n                            <Route exact path=\"/\" component={EditPage}/>\n                            <Route path=\"/login\" component={Login} />\n                            <Route path=\"/new_user\" component={NewUserCaptcha}/>\n                            <Route path=\"/get_token\" component={GetToken}/>\n                            <Route path=\"/error\" component={GeneralError} />\n                            <ACLRoute path=\"/mypage\" component={MyPage} />\n                            <ACLRoute path=\"/logout\" component={Logout} />\n                        </Switch>\n                    </div>\n                    <Footer/>\n                </LastLocationProvider>\n            </Router>\n        </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { GoogleReCaptchaProvider } from 'react-google-recaptcha-v3';\n\nReactDOM.render(\n  <React.StrictMode>\n      <GoogleReCaptchaProvider\n          reCaptchaKey=\"6LehRbAZAAAAAAHkv7SHnG3sW4yKENvg-vdUFl_U\"\n          language=\"ko\"\n      >\n          <App />\n      </GoogleReCaptchaProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}